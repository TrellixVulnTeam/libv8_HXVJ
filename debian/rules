#!/usr/bin/make -f

include /usr/share/cdbs/1/rules/debhelper.mk
include /usr/share/cdbs/1/class/scons.mk

SONAME = 2.5.9.15

DEB_DH_MAKESHLIBS_ARGS = -- -c4

CXXFLAGS += -fno-strict-aliasing
CFLAGS += -fno-strict-aliasing
export CFLAGS
export CXXFLAGS

# map HOST ARCH AND OS to v8 options
v8arch := $(or $(v8arch),$(if $(filter i386,$(DEB_HOST_ARCH)),ia32))
v8arch := $(or $(v8arch),$(if $(filter amd64,$(DEB_HOST_ARCH)),x64))
v8arch := $(or $(v8arch),$(if $(filter armel,$(DEB_HOST_ARCH)),arm))
v8arch := $(or $(v8arch),$(if $(filter armhf,$(DEB_HOST_ARCH)),arm))
v8arch := $(or $(v8arch),$(if $(filter mipsel,$(DEB_HOST_ARCH)),mips))
v8arch := $(or $(v8arch),$(DEB_HOST_ARCH))
v8os := $(or $(v8os),$(if $(filter linux,$(DEB_HOST_ARCH_OS)),linux))
v8os := $(or $(v8os),$(if $(filter kfreebsd,$(DEB_HOST_ARCH_OS)),freebsd))
v8os := $(or $(v8os),$(DEB_HOST_ARCH_OS))

DEB_SCONS_OPTIONS = library=shared soname=on snapshot=on shlibtype=hidden arch=$(v8arch) os=$(v8os)
DEB_SCONS_BUILD_TARGET = library

# regression tests need to build shell for mjsunit, and cc code for cctest
DEB_SCONS_CHECK_TARGET = sample sample=shell cctests

DEB_SCONS_INSTALL_OPTIONS += DESTDIR="$(cdbs_curdestdir)"

clean::
	rm -f tools/*.pyc libv8-$(SONAME).so
	rm -rf obj
	rm -f test/*/*.pyc
	rm -f shell

# actually run regression tests
common-post-build-impl::
	$(if $(filter nocheck,$(DEB_BUILD_OPTIONS)),,LD_PRELOAD=$(CURDIR)/libv8-$(SONAME).so $(CURDIR)/tools/test.py --snapshot --no-build cctest mjsunit message arch=$(v8arch))

common-install-impl::
	cd debian/tmp/usr/lib/ ; \
	mv libv8-$(SONAME)*.so libv8.so.$(SONAME) ; \
	ln -s -T libv8.so.$(SONAME) libv8.so
