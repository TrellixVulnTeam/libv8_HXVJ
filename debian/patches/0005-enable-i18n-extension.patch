Description: Enable the i18n extension needed by chromium 11
 * tools/gyp/v8.gyp is modified to mimic what src/extension/experimental/experimental.gyp does.
 * internalize src/extension/experimental paths, remove src/ and include/
 * silence a gcc warning about comparison of signed and unsigned integers in language-matcher.cc
 * fix include of "v8.h" in i18n-extension.h (Closes: #639522)
 * do not put I18NExtension in v8::internal namespace, use v8_i18n (same name as the externalized version) (Closes: #639596)
Forwarded: not-needed
Author: Giuseppe Iuculano <iuculano@debian.org>, Jérémy Lal <kapouer@melix.org>
Last-Update: 2011-10-25
--- a/src/extensions/experimental/language-matcher.cc
+++ b/src/extensions/experimental/language-matcher.cc
@@ -28,22 +28,21 @@
 // TODO(cira): Remove LanguageMatcher from v8 when ICU implements
 // language matching API.
 
-#include "src/extensions/experimental/language-matcher.h"
+#include "extensions/experimental/language-matcher.h"
 
 #include <string.h>
 
-#include "src/extensions/experimental/i18n-utils.h"
+#include "extensions/experimental/i18n-utils.h"
 #include "unicode/datefmt.h"  // For getAvailableLocales
 #include "unicode/locid.h"
 #include "unicode/uloc.h"
 
-namespace v8 {
-namespace internal {
+namespace v8_i18n {
 
 const unsigned int LanguageMatcher::kLanguageWeight = 75;
 const unsigned int LanguageMatcher::kScriptWeight = 20;
 const unsigned int LanguageMatcher::kRegionWeight = 5;
-const unsigned int LanguageMatcher::kThreshold = 50;
+const int LanguageMatcher::kThreshold = 50;
 const unsigned int LanguageMatcher::kPositionBonus = 1;
 const char* const LanguageMatcher::kDefaultLocale = "root";
 
@@ -249,4 +248,4 @@
   return !U_FAILURE(status);
 }
 
-} }  // namespace v8::internal
+}  // namespace v8_i18n
--- a/src/extensions/experimental/language-matcher.h
+++ b/src/extensions/experimental/language-matcher.h
@@ -28,12 +28,11 @@
 #ifndef V8_EXTENSIONS_EXPERIMENTAL_LANGUAGE_MATCHER_H_
 #define V8_EXTENSIONS_EXPERIMENTAL_LANGUAGE_MATCHER_H_
 
-#include "include/v8.h"
+#include "v8.h"
 
 #include "unicode/uloc.h"
 
-namespace v8 {
-namespace internal {
+namespace v8_i18n {
 
 struct LocaleIDMatch {
   LocaleIDMatch();
@@ -76,7 +75,7 @@
   static const unsigned int kRegionWeight;
 
   // LocaleID match score has to be over this number to accept the match.
-  static const unsigned int kThreshold;
+  static const int kThreshold;
 
   // For breaking ties in priority queue.
   static const unsigned int kPositionBonus;
@@ -90,6 +89,6 @@
                                              LocaleIDMatch* result);
 };
 
-} }  // namespace v8::internal
+}  // namespace v8_i18n
 
 #endif  // V8_EXTENSIONS_EXPERIMENTAL_LANGUAGE_MATCHER_H_
--- a/src/extensions/experimental/i18n-extension.h
+++ b/src/extensions/experimental/i18n-extension.h
@@ -28,10 +28,18 @@
 #ifndef V8_EXTENSIONS_EXPERIMENTAL_I18N_EXTENSION_H_
 #define V8_EXTENSIONS_EXPERIMENTAL_I18N_EXTENSION_H_
 
-#include "include/v8.h"
+#include "v8.h"
 
-namespace v8 {
-namespace internal {
+// Setup for Linux shared library export. There is no need to distinguish
+// between building or using the V8 shared library, but we should not
+// export symbols when we are building a static library.
+#if defined(__GNUC__) && (__GNUC__ >= 4) && defined(V8_SHARED)
+#define V8EXPORT __attribute__ ((visibility("default")))
+#else  // defined(__GNUC__) && (__GNUC__ >= 4)
+#define V8EXPORT
+#endif  // defined(__GNUC__) && (__GNUC__ >= 4)
+
+namespace v8_i18n {
 
 
 class I18NExtension : public v8::Extension {
@@ -42,13 +50,13 @@
       v8::Handle<v8::String> name);
 
   // V8 code prefers Register, while Chrome and WebKit use get kind of methods.
-  static void Register();
-  static I18NExtension* get();
+  V8EXPORT static void Register();
+  V8EXPORT static I18NExtension* get();
 
  private:
   static I18NExtension* extension_;
 };
 
-} }  // namespace v8::internal
+}  // namespace v8_i18n
 
 #endif  // V8_EXTENSIONS_EXPERIMENTAL_I18N_EXTENSION_H_
--- a/src/extensions/experimental/break-iterator.cc
+++ b/src/extensions/experimental/break-iterator.cc
@@ -25,7 +25,7 @@
 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-#include "src/extensions/experimental/break-iterator.h"
+#include "extensions/experimental/break-iterator.h"
 
 #include <string.h>
 
@@ -33,8 +33,7 @@
 #include "unicode/locid.h"
 #include "unicode/rbbi.h"
 
-namespace v8 {
-namespace internal {
+namespace v8_i18n {
 
 v8::Persistent<v8::FunctionTemplate> BreakIterator::break_iterator_template_;
 
@@ -249,4 +248,4 @@
   return wrapper;
 }
 
-} }  // namespace v8::internal
+}  // namespace v8_i18n
--- a/src/extensions/experimental/break-iterator.h
+++ b/src/extensions/experimental/break-iterator.h
@@ -28,7 +28,7 @@
 #ifndef V8_EXTENSIONS_EXPERIMENTAL_BREAK_ITERATOR_H_
 #define V8_EXTENSIONS_EXPERIMENTAL_BREAK_ITERATOR_H_
 
-#include "include/v8.h"
+#include "v8.h"
 
 #include "unicode/uversion.h"
 
@@ -37,8 +37,7 @@
 class UnicodeString;
 }
 
-namespace v8 {
-namespace internal {
+namespace v8_i18n {
 
 class BreakIterator {
  public:
@@ -84,6 +83,6 @@
   static v8::Persistent<v8::FunctionTemplate> break_iterator_template_;
 };
 
-} }  // namespace v8::internal
+}  // namespace v8_i18n
 
 #endif  // V8_EXTENSIONS_EXPERIMENTAL_BREAK_ITERATOR_H_
--- a/src/extensions/experimental/collator.cc
+++ b/src/extensions/experimental/collator.cc
@@ -25,14 +25,13 @@
 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-#include "src/extensions/experimental/collator.h"
+#include "extensions/experimental/collator.h"
 
 #include "unicode/coll.h"
 #include "unicode/locid.h"
 #include "unicode/ucol.h"
 
-namespace v8 {
-namespace internal {
+namespace v8_i18n {
 
 v8::Persistent<v8::FunctionTemplate> Collator::collator_template_;
 
@@ -219,4 +218,4 @@
   return wrapper;
 }
 
-} }  // namespace v8::internal
+}  // namespace v8_i18n
--- a/src/extensions/experimental/collator.h
+++ b/src/extensions/experimental/collator.h
@@ -28,7 +28,7 @@
 #ifndef V8_EXTENSIONS_EXPERIMENTAL_COLLATOR_H
 #define V8_EXTENSIONS_EXPERIMENTAL_COLLATOR_H_
 
-#include "include/v8.h"
+#include "v8.h"
 
 #include "unicode/uversion.h"
 
@@ -37,8 +37,7 @@
 class UnicodeString;
 }
 
-namespace v8 {
-namespace internal {
+namespace v8_i18n {
 
 class Collator {
  public:
@@ -63,6 +62,6 @@
   static v8::Persistent<v8::FunctionTemplate> collator_template_;
 };
 
-} }  // namespace v8::internal
+}  // namespace v8_i18n
 
 #endif  // V8_EXTENSIONS_EXPERIMENTAL_COLLATOR
--- a/src/extensions/experimental/datetime-format.cc
+++ b/src/extensions/experimental/datetime-format.cc
@@ -25,18 +25,17 @@
 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-#include "src/extensions/experimental/datetime-format.h"
+#include "extensions/experimental/datetime-format.h"
 
 #include <string.h>
 
-#include "src/extensions/experimental/i18n-utils.h"
+#include "extensions/experimental/i18n-utils.h"
 #include "unicode/dtfmtsym.h"
 #include "unicode/dtptngen.h"
 #include "unicode/locid.h"
 #include "unicode/smpdtfmt.h"
 
-namespace v8 {
-namespace internal {
+namespace v8_i18n {
 
 v8::Persistent<v8::FunctionTemplate> DateTimeFormat::datetime_format_template_;
 
@@ -381,4 +380,4 @@
   return icu::DateFormat::kShort;
 }
 
-} }  // namespace v8::internal
+}  // namespace v8_i18n
--- a/src/extensions/experimental/datetime-format.h
+++ b/src/extensions/experimental/datetime-format.h
@@ -28,7 +28,7 @@
 #ifndef V8_EXTENSIONS_EXPERIMENTAL_DATETIME_FORMAT_H_
 #define V8_EXTENSIONS_EXPERIMENTAL_DATETIME_FORMAT_H_
 
-#include "include/v8.h"
+#include "v8.h"
 
 #include "unicode/uversion.h"
 
@@ -36,8 +36,7 @@
 class SimpleDateFormat;
 }
 
-namespace v8 {
-namespace internal {
+namespace v8_i18n {
 
 class DateTimeFormat {
  public:
@@ -78,6 +77,6 @@
   static v8::Persistent<v8::FunctionTemplate> datetime_format_template_;
 };
 
-} }  // namespace v8::internal
+}  // namespace v8_i18n
 
 #endif  // V8_EXTENSIONS_EXPERIMENTAL_DATETIME_FORMAT_H_
--- a/src/extensions/experimental/i18n-extension.cc
+++ b/src/extensions/experimental/i18n-extension.cc
@@ -25,17 +25,16 @@
 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-#include "src/extensions/experimental/i18n-extension.h"
+#include "extensions/experimental/i18n-extension.h"
 
-#include "src/extensions/experimental/break-iterator.h"
-#include "src/extensions/experimental/collator.h"
-#include "src/extensions/experimental/datetime-format.h"
-#include "src/extensions/experimental/i18n-locale.h"
-#include "src/extensions/experimental/i18n-natives.h"
-#include "src/extensions/experimental/number-format.h"
+#include "extensions/experimental/break-iterator.h"
+#include "extensions/experimental/collator.h"
+#include "extensions/experimental/datetime-format.h"
+#include "extensions/experimental/i18n-locale.h"
+#include "extensions/experimental/i18n-natives.h"
+#include "extensions/experimental/number-format.h"
 
-namespace v8 {
-namespace internal {
+namespace v8_i18n {
 
 I18NExtension* I18NExtension::extension_ = NULL;
 
@@ -71,4 +70,4 @@
   static v8::DeclareExtension i18n_extension_declaration(I18NExtension::get());
 }
 
-} }  // namespace v8::internal
+}  // namespace v8_i18n
--- a/src/extensions/experimental/i18n-locale.cc
+++ b/src/extensions/experimental/i18n-locale.cc
@@ -25,15 +25,14 @@
 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-#include "src/extensions/experimental/i18n-locale.h"
+#include "extensions/experimental/i18n-locale.h"
 
-#include "src/extensions/experimental/i18n-utils.h"
-#include "src/extensions/experimental/language-matcher.h"
+#include "extensions/experimental/i18n-utils.h"
+#include "extensions/experimental/language-matcher.h"
 #include "unicode/locid.h"
 #include "unicode/uloc.h"
 
-namespace v8 {
-namespace internal {
+namespace v8_i18n {
 
 const char* const I18NLocale::kLocaleID = "localeID";
 const char* const I18NLocale::kRegionID = "regionID";
@@ -108,4 +107,4 @@
   return !U_FAILURE(status);
 }
 
-} }  // namespace v8::internal
+}  // namespace v8_i18n
--- a/src/extensions/experimental/i18n-locale.h
+++ b/src/extensions/experimental/i18n-locale.h
@@ -28,10 +28,9 @@
 #ifndef V8_EXTENSIONS_EXPERIMENTAL_I18N_LOCALE_H_
 #define V8_EXTENSIONS_EXPERIMENTAL_I18N_LOCALE_H_
 
-#include "include/v8.h"
+#include "v8.h"
 
-namespace v8 {
-namespace internal {
+namespace v8_i18n {
 
 class I18NLocale {
  public:
@@ -55,6 +54,6 @@
   static const char* const kICULocaleID;
 };
 
-} }  // namespace v8::internal
+}  // namespace v8_i18n
 
 #endif  // V8_EXTENSIONS_EXPERIMENTAL_I18N_LOCALE_H_
--- a/src/extensions/experimental/i18n-natives.h
+++ b/src/extensions/experimental/i18n-natives.h
@@ -28,8 +28,7 @@
 #ifndef V8_EXTENSIONS_EXPERIMENTAL_I18N_NATIVES_H_
 #define V8_EXTENSIONS_EXPERIMENTAL_I18N_NATIVES_H_
 
-namespace v8 {
-namespace internal {
+namespace v8_i18n {
 
 class I18Natives {
  public:
@@ -38,6 +37,6 @@
   static const char* GetScriptSource();
 };
 
-} }  // namespace v8::internal
+}  // namespace v8_i18n
 
 #endif  // V8_EXTENSIONS_EXPERIMENTAL_I18N_NATIVES_H_
--- a/src/extensions/experimental/i18n-utils.cc
+++ b/src/extensions/experimental/i18n-utils.cc
@@ -25,14 +25,13 @@
 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-#include "src/extensions/experimental/i18n-utils.h"
+#include "extensions/experimental/i18n-utils.h"
 
 #include <string.h>
 
 #include "unicode/unistr.h"
 
-namespace v8 {
-namespace internal {
+namespace v8_i18n {
 
 // static
 void I18NUtils::StrNCopy(char* dest, int length, const char* src) {
@@ -84,4 +83,4 @@
   target[length - 1] = 0x0u;
 }
 
-} }  // namespace v8::internal
+}  // namespace v8_i18n
--- a/src/extensions/experimental/i18n-utils.h
+++ b/src/extensions/experimental/i18n-utils.h
@@ -28,7 +28,7 @@
 #ifndef V8_EXTENSIONS_EXPERIMENTAL_I18N_UTILS_H_
 #define V8_EXTENSIONS_EXPERIMENTAL_I18N_UTILS_H_
 
-#include "include/v8.h"
+#include "v8.h"
 
 #include "unicode/uversion.h"
 
@@ -36,8 +36,7 @@
 class UnicodeString;
 }
 
-namespace v8 {
-namespace internal {
+namespace v8_i18n {
 
 class I18NUtils {
  public:
@@ -64,6 +63,6 @@
   I18NUtils() {}
 };
 
-} }  // namespace v8::internal
+}  // namespace v8_i18n
 
 #endif  // V8_EXTENSIONS_EXPERIMENTAL_I18N_UTILS_H_
--- a/src/extensions/experimental/number-format.cc
+++ b/src/extensions/experimental/number-format.cc
@@ -25,11 +25,11 @@
 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-#include "src/extensions/experimental/number-format.h"
+#include "extensions/experimental/number-format.h"
 
 #include <string.h>
 
-#include "src/extensions/experimental/i18n-utils.h"
+#include "extensions/experimental/i18n-utils.h"
 #include "unicode/dcfmtsym.h"
 #include "unicode/decimfmt.h"
 #include "unicode/locid.h"
@@ -39,8 +39,7 @@
 #include "unicode/unum.h"
 #include "unicode/uversion.h"
 
-namespace v8 {
-namespace internal {
+namespace v8_i18n {
 
 const int NumberFormat::kCurrencyCodeLength = 4;
 
@@ -371,4 +370,4 @@
                       "that is not a NumberFormat.")));
 }
 
-} }  // namespace v8::internal
+}  // namespace v8_i18n
--- a/src/extensions/experimental/number-format.h
+++ b/src/extensions/experimental/number-format.h
@@ -28,7 +28,7 @@
 #ifndef V8_EXTENSIONS_EXPERIMENTAL_NUMBER_FORMAT_H_
 #define V8_EXTENSIONS_EXPERIMENTAL_NUMBER_FORMAT_H_
 
-#include "include/v8.h"
+#include "v8.h"
 
 #include "unicode/uversion.h"
 
@@ -36,8 +36,7 @@
 class DecimalFormat;
 }
 
-namespace v8 {
-namespace internal {
+namespace v8_i18n {
 
 class NumberFormat {
  public:
@@ -66,6 +65,6 @@
   static v8::Persistent<v8::FunctionTemplate> number_format_template_;
 };
 
-} }  // namespace v8::internal
+}  // namespace v8_i18n
 
 #endif  // V8_EXTENSIONS_EXPERIMENTAL_NUMBER_FORMAT_H_
--- a/src/extensions/experimental/i18n-js2c.py
+++ b/src/extensions/experimental/i18n-js2c.py
@@ -85,10 +85,9 @@
 // want to make changes to this file you should either change the
 // javascript source files or the i18n-js2c.py script.
 
-#include "src/extensions/experimental/i18n-natives.h"
+#include "extensions/experimental/i18n-natives.h"
 
-namespace v8 {
-namespace internal {
+namespace v8_i18n {
 
 // static
 const char* I18Natives::GetScriptSource() {
@@ -98,8 +97,7 @@
   return i18n_source;
 }
 
-}  // internal
-}  // v8
+}  // namespace v8_i18n
 """
 
 
--- a/tools/gyp/v8.gyp
+++ b/tools/gyp/v8.gyp
@@ -89,10 +89,10 @@
           'conditions': [
             ['want_separate_host_toolset==1', {
               'toolsets': ['host', 'target'],
-              'dependencies': ['mksnapshot#host', 'js2c#host'],
+              'dependencies': ['mksnapshot#host', 'js2c#host', 'js2c_i18n#host'],
             }, {
               'toolsets': ['target'],
-              'dependencies': ['mksnapshot', 'js2c'],
+              'dependencies': ['mksnapshot', 'js2c', 'js2c_i18n'],
             }],
             ['component=="shared_library"', {
               'conditions': [
@@ -127,6 +127,7 @@
           'sources': [
             '<(SHARED_INTERMEDIATE_DIR)/libraries.cc',
             '<(SHARED_INTERMEDIATE_DIR)/experimental-libraries.cc',
+            '<(SHARED_INTERMEDIATE_DIR)/i18n-js.cc',
             '<(INTERMEDIATE_DIR)/snapshot.cc',
           ],
           'actions': [
@@ -197,15 +198,16 @@
           'sources': [
             '<(SHARED_INTERMEDIATE_DIR)/libraries.cc',
             '<(SHARED_INTERMEDIATE_DIR)/experimental-libraries.cc',
+            '<(SHARED_INTERMEDIATE_DIR)/i18n-js.cc',
             '../../src/snapshot-empty.cc',
           ],
           'conditions': [
             ['want_separate_host_toolset==1', {
               'toolsets': ['host', 'target'],
-              'dependencies': ['js2c#host'],
+              'dependencies': ['js2c#host', 'js2c_i18n#host'],
             }, {
               'toolsets': ['target'],
-              'dependencies': ['js2c'],
+              'dependencies': ['js2c', 'js2c_i18n'],
             }],
             ['component=="shared_library"', {
               'defines': [
@@ -221,6 +223,11 @@
           'include_dirs+': [
             '../../src',
           ],
+          'link_settings': {
+              'libraries': [
+                '-licui18n', '-licuuc', '-licudata',
+              ],
+          },
           'sources': [
             '../../src/accessors.cc',
             '../../src/accessors.h',
@@ -470,6 +477,23 @@
             '../../src/extensions/externalize-string-extension.h',
             '../../src/extensions/gc-extension.cc',
             '../../src/extensions/gc-extension.h',
+            '../../src/extensions/experimental/break-iterator.cc',
+            '../../src/extensions/experimental/break-iterator.h',
+            '../../src/extensions/experimental/collator.cc',
+            '../../src/extensions/experimental/collator.h',
+            '../../src/extensions/experimental/datetime-format.cc',
+            '../../src/extensions/experimental/datetime-format.h',
+            '../../src/extensions/experimental/i18n-extension.cc',
+            '../../src/extensions/experimental/i18n-extension.h',
+            '../../src/extensions/experimental/i18n-locale.cc',
+            '../../src/extensions/experimental/i18n-locale.h',
+            '../../src/extensions/experimental/i18n-natives.h',
+            '../../src/extensions/experimental/i18n-utils.cc',
+            '../../src/extensions/experimental/i18n-utils.h',
+            '../../src/extensions/experimental/language-matcher.cc',
+            '../../src/extensions/experimental/language-matcher.h',
+            '../../src/extensions/experimental/number-format.cc',
+            '../../src/extensions/experimental/number-format.h',
           ],
           'conditions': [
             ['want_separate_host_toolset==1', {
@@ -731,6 +755,40 @@
           ],
         },
         {
+          'target_name': 'js2c_i18n',
+          'type': 'none',
+          'conditions': [
+            ['want_separate_host_toolset==1', {
+              'toolsets': ['host'],
+            }, {
+              'toolsets': ['target'],
+            }],
+          ],
+          'variables': {
+            'js_files': [
+              '../../src/extensions/experimental/i18n.js'
+            ],
+          },
+          'actions': [
+            {
+              'action_name': 'js2c_i18n',
+              'inputs': [
+                '../../src/extensions/experimental/i18n-js2c.py',
+                '<@(js_files)',
+              ],
+              'outputs': [
+                '<(SHARED_INTERMEDIATE_DIR)/i18n-js.cc',
+              ],
+              'action': [
+                'python',
+                '../../src/extensions/experimental/i18n-js2c.py',
+                '<@(_outputs)',
+                '<@(js_files)'
+              ],
+            },
+          ],
+        },
+        {
           'target_name': 'mksnapshot',
           'type': 'executable',
           'dependencies': [
@@ -779,6 +837,9 @@
                 '-lbz2',
               ]}],
           ],
+          'libraries': [
+            '-licui18n', '-licuuc', '-licudata',
+          ],
         },
         {
           'target_name': 'preparser_lib',
